# @Version  : 1.0
# @Author   : Cheng Huang
# @File     :16_bit_operator.py
# @Time     :2024/7/13 下午3:50

# 位运算的案例
# ~按位取反
# 规则：对数据的每个二进制位取反，即把1变成0，把0变成1
print(~-2)
print(~2)

# &按位与
# 规则：参与运算的两个值，如果两个相应位都为1，则该位的结果为1，否则为0
print(2&3)

# ^按位异或
# 规则：当两个对应的二进制位相异时，结果为1
print(2^-3)

# |按位或
# 规则：只要对应的两个二进位有一个为1时，结果位就为1
print(2|3)

# <<左移
# 规则：运算数的各二进位全部左移若干位，由“<<”右边的数指定移动的位数，符号位不变，高位丢弃，低位补零
print(5<<1)
print(-5<<1)

# >>右移
# 规则：把“>>”左边的运算数的各二进位全部右移若干位，“>>”右边的数指定移动的位数，低位溢出，符号位不变，并用符号位补溢出的高位
print(5>>1)
print(-5>>1)
print(-13>>2)
